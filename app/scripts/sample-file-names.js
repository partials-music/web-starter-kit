const LOWEST_PITCH = 21;
const HIGHEST_PITCH = 108;

const FILES = [
  '021_A-1KM56_H.wav',
  '021_A-1KM56_M.wav',
  '021_ped_h.wav',
  '021_ped_mf.wav',
  '025_CSharp0KM56_H.wav',
  '025_CSharp0KM56_M.wav',
  '025_ped_h.wav',
  '025_ped_mf.wav',
  '026_D0KM56_H.wav',
  '026_D0KM56_M.wav',
  '026_D0KM56_S.wav',
  '026_ped_h.wav',
  '026_ped_mf.wav',
  '026_ped_s.wav',
  '027_DSharp0KM56_H.wav',
  '027_DSharp0KM56_M.wav',
  '027_DSharp0KM56_S.wav',
  '027_ped_h.wav',
  '027_ped_mf.wav',
  '027_ped_s.wav',
  '028_E0KM56_H.wav',
  '028_E0KM56_M.wav',
  '028_E0KM56_S.wav',
  '028_ped_h.wav',
  '028_ped_mf.wav',
  '028_ped_s.wav',
  '029_F0KM56_H.wav',
  '029_F0KM56_M.wav',
  '029_F0KM56_S.wav',
  '029_ped_h.wav',
  '029_ped_mf.wav',
  '029_ped_s.wav',
  '030_FSharp0KM56_H.wav',
  '030_FSharp0KM56_M.wav',
  '030_FSharp0KM56_S.wav',
  '030_ped_h.wav',
  '030_ped_mf.wav',
  '030_ped_s.wav',
  '032_GSharp0KM56_H.wav',
  '032_GSharp0KM56_M.wav',
  '032_GSharp0KM56_S.wav',
  '032_ped_h.wav',
  '032_ped_mf.wav',
  '032_ped_s.wav',
  '033_A0KM56_H.wav',
  '033_A0KM56_M.wav',
  '033_A0KM56_S.wav',
  '033_ped_h.wav',
  '033_ped_mf.wav',
  '034_ASharp0KM56_H.wav',
  '034_ASharp0KM56_M.wav',
  '034_ASharp0KM56_S.wav',
  '034_ped_h.wav',
  '034_ped_mf.wav',
  '036_C1KM56_H.wav',
  '036_C1KM56_M.wav',
  '036_C1KM56_S.wav',
  '036_ped_h.wav',
  '036_ped_mf.wav',
  '037_CSharp1KM56_H.wav',
  '037_CSharp1KM56_M.wav',
  '037_CSharp1KM56_S.wav',
  '037_ped_h.wav',
  '037_ped_mf.wav',
  '039_DSharp1KM56_H.wav',
  '039_DSharp1KM56_M.wav',
  '039_ped_h.wav',
  '039_ped_mf.wav',
  '040_E1KM56_H.wav',
  '040_E1KM56_M.wav',
  '040_E1KM56_S.wav',
  '040_ped_h.wav',
  '040_ped_mf.wav',
  '040_ped_s.wav',
  '041_F1KM56_H.wav',
  '041_F1KM56_M.wav',
  '041_F1KM56_S.wav',
  '041_ped_h.wav',
  '041_ped_mf.wav',
  '043_G1KM56_H.wav',
  '043_G1KM56_M.wav',
  '043_G1KM56_S.wav',
  '043_ped_h.wav',
  '043_ped_mf.wav',
  '043_ped_s.wav',
  '044_GSharp1KM56_H.wav',
  '044_GSharp1KM56_M.wav',
  '044_GSharp1KM56_S.wav',
  '044_ped_h.wav',
  '044_ped_mf.wav',
  '044_ped_s.wav',
  '046_ASharp1KM56_H.wav',
  '046_ASharp1KM56_M.wav',
  '046_ASharp1KM56_S.wav',
  '046_ped_h.wav',
  '046_ped_mf.wav',
  '046_ped_s.wav',
  '047_B1KM56_H.wav',
  '047_B1KM56_M.wav',
  '047_B1KM56_S.wav',
  '047_ped_h.wav',
  '047_ped_mf.wav',
  '047_ped_s.wav',
  '048_C2KM56_H.wav',
  '048_C2KM56_M.wav',
  '048_C2KM56_S.wav',
  '048_ped_h.wav',
  '048_ped_mf.wav',
  '048_ped_s.wav',
  '049_CSharp2KM56_H.wav',
  '049_CSharp2KM56_M.wav',
  '049_CSharp2KM56_S.wav',
  '049_ped_h.wav',
  '049_ped_mf.wav',
  '049_ped_s.wav',
  '051_DSharp2KM56_H.wav',
  '051_DSharp2KM56_M.wav',
  '051_ped_h.wav',
  '051_ped_mf.wav',
  '051_ped_s.wav',
  '052_E2KM56_H.wav',
  '052_E2KM56_M.wav',
  '052_E2KM56_S.wav',
  '052_ped_h.wav',
  '052_ped_mf.wav',
  '052_ped_s.wav',
  '053_F2KM56_H.wav',
  '053_F2KM56_M.wav',
  '053_F2KM56_S.wav',
  '053_ped_h.wav',
  '053_ped_mf.wav',
  '053_ped_s.wav',
  '055_G2KM56_H.wav',
  '055_G2KM56_M.wav',
  '055_ped_h.wav',
  '055_ped_mf.wav',
  '055_ped_s.wav',
  '056_GSharp2KM56_H.wav',
  '056_GSharp2KM56_M.wav',
  '056_GSharp2KM56_S.wav',
  '056_ped_h.wav',
  '056_ped_mf.wav',
  '056_ped_s.wav',
  '057_A2KM56_H.wav',
  '057_A2KM56_M.wav',
  '057_A2KM56_S.wav',
  '057_ped_h.wav',
  '057_ped_mf.wav',
  '057_ped_s.wav',
  '059_B2KM56_H.wav',
  '059_B2KM56_M.wav',
  '059_B2KM56_S.wav',
  '059_ped_h.wav',
  '059_ped_mf.wav',
  '059_ped_s.wav',
  '061_CSharp3KM56_H.wav',
  '061_CSharp3KM56_M.wav',
  '061_ped_h.wav',
  '061_ped_mf.wav',
  '061_ped_s.wav',
  '062_D3KM56_S.wav',
  '063_DSharp3KM56_H.wav',
  '063_DSharp3KM56_M.wav',
  '063_ped_h.wav',
  '063_ped_mf.wav',
  '066_FSharp3KM56_H.wav',
  '066_FSharp3KM56_M.wav',
  '066_FSharp3KM56_S.wav',
  '066_ped_h.wav',
  '066_ped_mf.wav',
  '066_ped_s.wav',
  '067_G3KM56_H.wav',
  '067_G3KM56_M.wav',
  '067_G3KM56_S.wav',
  '067_ped_h.wav',
  '067_ped_mf.wav',
  '067_ped_s.wav',
  '069_A3KM56_H.wav',
  '069_A3KM56_M.wav',
  '069_A3KM56_S.wav',
  '069_ped_h.wav',
  '069_ped_mf.wav',
  '069_ped_s.wav',
  '071_B3KM56_H.wav',
  '071_B3KM56_M.wav',
  '071_B3KM56_S.wav',
  '071_ped_h.wav',
  '071_ped_mf.wav',
  '071_ped_s.wav',
  '073_CSharp4KM56_H.wav',
  '073_CSharp4KM56_M.wav',
  '073_CSharp4KM56_S.wav',
  '073_ped_h.wav',
  '073_ped_mf.wav',
  '073_ped_s.wav',
  '074_D4KM56_H.wav',
  '074_D4KM56_M.wav',
  '074_D4KM56_S.wav',
  '074_ped_h.wav',
  '074_ped_mf.wav',
  '074_ped_s.wav',
  '075_DSharp4KM56_H.wav',
  '075_DSharp4KM56_M.wav',
  '075_DSharp4KM56_S.wav',
  '075_ped_h.wav',
  '075_ped_mf.wav',
  '075_ped_s.wav',
  '076_E4KM56_H.wav',
  '076_E4KM56_M.wav',
  '076_E4KM56_S.wav',
  '076_ped_h.wav',
  '076_ped_mf.wav',
  '076_ped_s.wav',
  '078_FSharp4KM56_H.wav',
  '078_FSharp4KM56_M.wav',
  '078_FSharp4KM56_S.wav',
  '078_ped_h.wav',
  '078_ped_mf.wav',
  '078_ped_s.wav',
  '079_G4KM56_H.wav',
  '079_G4KM56_M.wav',
  '079_G4KM56_S.wav',
  '079_ped_h.wav',
  '079_ped_mf.wav',
  '079_ped_s.wav',
  '080_GSharp4KM56_H.wav',
  '080_GSharp4KM56_M.wav',
  '080_GSharp4KM56_S.wav',
  '080_ped_h.wav',
  '080_ped_mf.wav',
  '080_ped_s.wav',
  '082_ASharp4KM56_H.wav',
  '082_ASharp4KM56_M.wav',
  '082_ped_h.wav',
  '082_ped_mf.wav',
  '082_ped_s.wav',
  '083_B4KM56_H.wav',
  '083_B4KM56_M.wav',
  '083_B4KM56_S.wav',
  '083_ped_h.wav',
  '083_ped_mf.wav',
  '083_ped_s.wav',
  '084_C5KM56_H.wav',
  '084_C5KM56_M.wav',
  '084_C5KM56_S.wav',
  '084_ped_h.wav',
  '084_ped_mf.wav',
  '084_ped_s.wav',
  '085_CSharp5KM56_H.wav',
  '085_CSharp5KM56_M.wav',
  '085_CSharp5KM56_S.wav',
  '085_ped_h.wav',
  '085_ped_mf.wav',
  '085_ped_s.wav',
  '087_DSharp5KM56_H.wav',
  '087_DSharp5KM56_M.wav',
  '087_DSharp5KM56_S.wav',
  '087_ped_h.wav',
  '087_ped_mf.wav',
  '087_ped_s.wav',
  '088_E5KM56_H.wav',
  '088_E5KM56_M.wav',
  '088_E5KM56_S.wav',
  '088_ped_h.wav',
  '088_ped_mf.wav',
  '088_ped_s.wav',
  '089_F5KM56_H.wav',
  '089_F5KM56_M.wav',
  '089_F5KM56_S.wav',
  '089_ped_h.wav',
  '089_ped_mf.wav',
  '091_G5KM56_H.wav',
  '091_G5KM56_M.wav',
  '091_G5KM56_S.wav',
  '091_ped_h.wav',
  '091_ped_mf.wav',
  '092_GSharp5KM56_H.wav',
  '092_GSharp5KM56_M.wav',
  '092_GSharp5KM56_S.wav',
  '092_ped_h.wav',
  '092_ped_mf.wav',
  '093_A5KM56_H.wav',
  '093_A5KM56_M.wav',
  '093_A5KM56_S.wav',
  '093_ped_h.wav',
  '093_ped_mf.wav',
  '094_ASharp5KM56_H.wav',
  '094_ASharp5KM56_M.wav',
  '094_ASharp5KM56_S.wav',
  '094_ped_h.wav',
  '094_ped_mf.wav',
  '096_C6KM56_H.wav',
  '096_C6KM56_M.wav',
  '096_C6KM56_S.wav',
  '096_ped_h.wav',
  '096_ped_mf.wav',
  '097_CSharp6KM56_H.wav',
  '097_CSharp6KM56_M.wav',
  '097_CSharp6KM56_S.wav',
  '097_ped_h.wav',
  '097_ped_mf.wav',
  '098_D6KM56_H.wav',
  '098_D6KM56_M.wav',
  '098_D6KM56_S.wav',
  '098_ped_h.wav',
  '098_ped_mf.wav',
  '100_E6KM56_H.wav',
  '100_E6KM56_M.wav',
  '100_E6KM56_S.wav',
  '100_ped_h.wav',
  '100_ped_mf.wav',
  '102_FSharp6KM56_H.wav',
  '102_FSharp6KM56_M.wav',
  '102_FSharp6KM56_S.wav',
  '102_ped_h.wav',
  '102_ped_mf.wav',
  '103_G6KM56_H.wav',
  '103_G6KM56_M.wav',
  '103_G6KM56_S.wav',
  '103_ped_h.wav',
  '103_ped_mf.wav',
  '104_GSharp6KM56_H.wav',
  '104_GSharp6KM56_M.wav',
  '104_GSharp6KM56_S.wav',
  '104_ped_h.wav',
  '104_ped_mf.wav',
  '105_A6KM56_H.wav',
  '105_A6KM56_M.wav',
  '105_A6KM56_S.wav',
  '105_ped_h.wav',
  '105_ped_mf.wav',
  '106_ASharp6KM56_H.wav',
  '106_ASharp6KM56_M.wav',
  '106_ASharp6KM56_S.wav',
  '106_ped_h.wav',
  '106_ped_mf.wav',
  '107_B6KM56_H.wav',
  '107_B6KM56_M.wav',
  '107_B6KM56_S.wav',
  '107_ped_h.wav',
  '107_ped_mf.wav',
  '108_C7KM56_H.wav',
  '108_C7KM56_M.wav',
  '108_C7KM56_S.wav',
  '108_ped_h.wav',
  '108_ped_mf.wav'
];

function extractNumber(fileName) {
  var leadingZero = fileName[0] === '0';
  var startSliceAt = leadingZero ? 1 : 0;
  var number = fileName.slice(startSliceAt, 3);
  return parseInt(number, 10);
}

function outOfRange(pitchNumber) {
  return pitchNumber < LOWEST_PITCH || pitchNumber > HIGHEST_PITCH;
}

function getFileName(pitchNumber) {
  if (outOfRange(pitchNumber)) {
    return undefined;
  }

  for (var i = 0; i < FILES.length; i++) {
    var fileName = FILES[i];
    if (extractNumber(fileName) === pitchNumber) {
      return fileName;
    }
  }
}

// oscillate as follows:
// 0, -1, 1, -2, 2, etc.
function next(i) {
  var nextValue = i;
  if (i >= 0) {
    nextValue++;
  }
  nextValue *= -1;
  return nextValue;
}

function getClosestSample(pitchNumber) {
  var i = 0;
  var keepGoing = true;
  while (keepGoing) {
    // spiral outward from original pitch
    i = next(i);
    var fileName = getFileName(pitchNumber + i);

    if (fileName) {
      // found closest pitch
      var result = {
        pitchNumber: extractNumber(fileName),
        fileName: fileName
      };
      return result;
    }

    // keep going as long as there are pitches remaining
    // above or below
    var tooLow = (pitchNumber - i) < LOWEST_PITCH;
    var tooHigh = (pitchNumber + i) > HIGHEST_PITCH;
    keepGoing = !(tooLow && tooHigh);
  }
}

export {getClosestSample, getFileName};
